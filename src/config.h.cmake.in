/* src/config.h.  Generated from config.h.cmake.in by CMake. */


#ifndef COIN_INTERNAL
#error this is a private header file
#endif

#include <unconfig.h>
#include <setup.h>


/* define this to the libCoin beta version letter */
#define COIN_BETA_VERSION @COIN_BETA_VERSION@

/* define this to a type of the indicated bitwidth */
#cmakedefine COIN_INT16_T @COIN_INT16_T@

/* define this to a type of the indicated bitwidth */
#cmakedefine COIN_INT32_T @COIN_INT32_T@

/* define this to a type of the indicated bitwidth */
#cmakedefine COIN_INT64_T @COIN_INT64_T@

/* define this to a type of the indicated bitwidth */
#cmakedefine COIN_INT8_T @COIN_INT8_T@

/* define this to a type of the indicated bitwidth */
#cmakedefine COIN_INTPTR_T @COIN_INTPTR_T@

/* Define when building Mac OS X framework */
#cmakedefine COIN_MACOSX_FRAMEWORK

/* Define for Mac OS X builds */
#cmakedefine COIN_MACOS_10

/* Define for Mac OS 10.1 builds */
#cmakedefine COIN_MACOS_10_1

/* Define for Mac OS 10.2 builds */
#cmakedefine COIN_MACOS_10_2

/* Define for Mac OS 10.3 and later builds */
#cmakedefine COIN_MACOS_10_3

/* define this to the libCoin major version number */
#define COIN_MAJOR_VERSION @COIN_MAJOR_VERSION@

/* define this to the libCoin release version number */
#define COIN_MICRO_VERSION @COIN_MICRO_VERSION@

/* define this to the libCoin minor version number */
#define COIN_MINOR_VERSION @COIN_MINOR_VERSION@

/* define this to the dynamic library name of Coin */
#ifdef _DEBUG
#define COIN_SYSTEM_LIBRARY_NAME "@COIN_DEBUG_SYSTEM_LIBRARY_NAME@"
#else
#define COIN_SYSTEM_LIBRARY_NAME "@COIN_RELEASE_SYSTEM_LIBRARY_NAME@"
#endif

/* System dependent thread ID type */
#define COIN_THREADID_TYPE @COIN_THREADID_TYPE@

/* define this to a type of the indicated bitwidth */
#cmakedefine COIN_UINT16_T @COIN_UINT16_T@

/* define this to a type of the indicated bitwidth */
#cmakedefine COIN_UINT32_T @COIN_UINT32_T@

/* define this to a type of the indicated bitwidth */
#cmakedefine COIN_UINT64_T @COIN_UINT64_T@

/* define this to a type of the indicated bitwidth */
#cmakedefine COIN_UINT8_T @COIN_UINT8_T@

/* define this to a type of the indicated bitwidth */
#cmakedefine COIN_UINTPTR_T @COIN_UINTPTR_T@

/* define to "remove" conflicting IN_PATH define from <sys/unistd.h> */
#cmakedefine COIN_UNDEF_IN_PATH_HACK

/* define this to the full libCoin major.minor.micro version number */
#define COIN_VERSION "@COIN_VERSION@"

/* define this to the dynamic library extension suffix on this system */
#define DYNAMIC_LIBRARY_EXTENSION "@CMAKE_SHARED_LIBRARY_SUFFIX@"

/* define for runtime linking with fontconfig */
#cmakedefine FONTCONFIG_RUNTIME_LINKING 1

/* define for runtime linking with freetype */
#cmakedefine FREETYPE_RUNTIME_LINKING 1

/* define if GLU is part of the GL library */
#cmakedefine GLU_IS_PART_OF_GL

/* define for runtime linking with GLU */
#cmakedefine GLU_RUNTIME_LINKING 1

/* define if you have AGL OpenGL bindings */
#cmakedefine HAVE_AGL

/* define if AGL pBuffers are available on the system */
#cmakedefine HAVE_AGL_PBUFFER

/* define if the AL header should be included as AL/al.h */
#cmakedefine HAVE_AL_AL_H

/* define if preprocessor can quote arguments with apostophes */
#cmakedefine HAVE_APOSTROPHES_QUOTING

/* Define if assert() uses __builtin_expect() */
#cmakedefine HAVE_ASSERT_WITH_BUILTIN_EXPECT

/* define if bcopy() is available */
#cmakedefine HAVE_BCOPY 1

/* Define to use bzip2 */
#cmakedefine HAVE_BZIP2

/* define if you have CGL OpenGL bindings */
#cmakedefine HAVE_CGL

/* define if you have EGL OpenGL bindings */
#cmakedefine HAVE_EGL

/* define if you have the CoreText framework */
#cmakedefine HAVE_CORETEXT

/* The CPP compiler has a variable containing the current function name */
#define HAVE_CPP_COMPILER_FUNCTION_NAME_VAR @HAVE_CPP_COMPILER_FUNCTION_NAME_VAR@

/* The C compiler has a variable containing the current function name */
#define HAVE_C_COMPILER_FUNCTION_NAME_VAR @HAVE_C_COMPILER_FUNCTION_NAME_VAR@

/* Define to 1 if you have the <direct.h> header file. */
#cmakedefine HAVE_DIRECT_H 1

/* define if the DLD shared library loader is available */
#cmakedefine HAVE_DLD_LIB

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H 1

/* define if you have the dl library */
#cmakedefine HAVE_DL_LIB

/* define if the Mac OS X dyld can be used for runtime binding */
#cmakedefine HAVE_DYLD_RUNTIME_BINDING

/* should be defined if there is some way of doing dynamic linking */
#cmakedefine HAVE_DYNAMIC_LINKING 1

/* whether or not finite() is available */
#cmakedefine HAVE_FINITE

/* define if you have the fontconfig library */
#cmakedefine HAVE_FONTCONFIG

/* define that the Fontconfig header is available */
#cmakedefine HAVE_FONTCONFIG_H

/* whether or not fpclass() is available */
#cmakedefine HAVE_FPCLASS

/* define if you have the freetype library */
#cmakedefine HAVE_FREETYPE

/* define that the FreeType header is available */
#cmakedefine HAVE_FREETYPE_H

/* define if fstat() is available */
#cmakedefine HAVE_FSTAT 1

/* Define to use ftime() */
#cmakedefine HAVE_FTIME

/* Define to use getcwd() */
#cmakedefine HAVE_GETCWD

/* Define to use GetEnvironmentVariable() instead of getenv() */
#cmakedefine HAVE_GETENVIRONMENTVARIABLE

/* Define to use SVr4 / BSD4.3 gettimeofday() */
#cmakedefine HAVE_GETTIMEOFDAY

/* define if you have GLU */
#cmakedefine HAVE_GLU

/* define if you have GLX X11 OpenGL bindings */
#cmakedefine HAVE_GLX

/* Define to use gzdopen() */
#cmakedefine HAVE_GZDOPEN 1

/* define if preprocessor can quote arguments with the hash symbol */
#cmakedefine HAVE_HASH_QUOTING 1

/* Define to 1 if you have the <ieeefp.h> header file. */
#cmakedefine HAVE_IEEEFP_H 1

/* Define to use ilogb() */
#cmakedefine HAVE_ILOGB

/* define this if the type is available on the system */
#cmakedefine HAVE_INT16_T 1

/* define this if the type is available on the system */
#cmakedefine HAVE_INT32_T 1

/* define this if the type is available on the system */
#cmakedefine HAVE_INT64_T 1

/* define this if the type is available on the system */
#cmakedefine HAVE_INT8_T 1

/* define this if the type is available on the system */
#cmakedefine HAVE_INTPTR_T 1

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H 1

/* Define to 1 if you have the <io.h> header file. */
#cmakedefine HAVE_IO_H 1

/* define if isinf() is available */
#cmakedefine HAVE_ISINF

/* whether or not isnan() is available */
#cmakedefine HAVE_ISNAN

/* Define this if you build the Java wrapper */
#cmakedefine HAVE_JAVA_WRAPPER

/* Define to 1 if you have the <libgen.h> header file. */
#cmakedefine HAVE_LIBGEN_H 1

/* define if you have the simage library */
#cmakedefine HAVE_LIBSIMAGE

/* define if localtime_s() is available */
#cmakedefine HAVE_LOCALTIME_S

/* define if localtime_r() is available */
#cmakedefine HAVE_LOCALTIME_R

/* Define to 1 if you have the <mach-o/dyld.h> header file. */
#cmakedefine HAVE_MACH_O_DYLD_H 1

/* define if memmove() is available */
#cmakedefine HAVE_MEMMOVE 1

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H 1

/* Define if you have the <netinet/in.h> header file. */
#cmakedefine HAVE_NETINET_IN_H 1

/* openal extensions available */
#cmakedefine HAVE_OPENAL

/* define if the AL header should be included as OpenAL/al.h */
#cmakedefine HAVE_OPENAL_AL_H

/* define if you have OpenGL */
#cmakedefine HAVE_OPENGL 1

/* Define to 1 if you have the <OpenGL/CGLCurrent.h> header file. */
#cmakedefine HAVE_OPENGL_CGLCURRENT_H 1

/* define if the GLEXT header should be included as OpenGL/glext.h */
#cmakedefine HAVE_OPENGL_GLEXT_H

/* define if the GLU header should be included as OpenGL/glu.h */
#cmakedefine HAVE_OPENGL_GLU_H

/* define if the GL header should be included as OpenGL/gl.h */
#cmakedefine HAVE_OPENGL_GL_H

/* define if pthread's struct timespec uses nsecs and not usecs */
#cmakedefine HAVE_PTHREAD_TIMESPEC_NSEC 1

/* Define to use Win32 QueryPerformanceCounter() */
#cmakedefine HAVE_QUERYPERFORMANCECOUNTER

/* define if snprintf() is available */
#cmakedefine HAVE_SNPRINTF 1

/* define that the Spidermonkey header is available */
#cmakedefine HAVE_SPIDERMONKEY_H

/* define if you have the SpiderMonkey library */
#cmakedefine HAVE_SPIDERMONKEY_VIA_LINKTIME_LINKING

/* Define to 1 if you have the <stddef.h> header file. */
#cmakedefine HAVE_STDDEF_H 1

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H 1

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H 1

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H 1

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H 1

/* Define to use BSD4.3 strncasecmp() */
#cmakedefine HAVE_STRNCASECMP

/* *EXPERIMENTAL* to use the GLU we've "appropriated" from SGI */
#cmakedefine HAVE_SUPERGLU

/* Define this if you want to use a system installation of expat */
#cmakedefine HAVE_SYSTEM_EXPAT

/* Define to 1 if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H 1

/* Define to 1 if you have the <sys/timeb.h> header file. */
#cmakedefine HAVE_SYS_TIMEB_H 1

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H 1

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the <sys/unistd.h> header file. */
#cmakedefine HAVE_SYS_UNISTD_H 1

/* to use the platform-independent thread-handling abstractions */
#cmakedefine HAVE_THREADS

/* Define to use timeGetTime() */
#cmakedefine HAVE_TIMEGETTIME

/* Define to 1 if you have the <time.h> header file. */
#cmakedefine HAVE_TIME_H 1

/* Define to 1 if you have the <tlhelp32.h> header file. */
#cmakedefine HAVE_TLHELP32_H 1

/* define this if the type is available on the system */
#cmakedefine HAVE_UINT16_T 1

/* define this if the type is available on the system */
#cmakedefine HAVE_UINT32_T 1

/* define this if the type is available on the system */
#cmakedefine HAVE_UINT64_T 1

/* define this if the type is available on the system */
#cmakedefine HAVE_UINT8_T 1

/* define this if the type is available on the system */
#cmakedefine HAVE_UINTPTR_T 1

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H 1

/* Define to use va_copy() when available */
#cmakedefine HAVE_VA_COPY_MACRO

/* define if vsnprintf() is available */
#cmakedefine HAVE_VSNPRINTF 1

/* define if you have WGL Win32 OpenGL bindings */
#cmakedefine HAVE_WGL

/* Define if the Win32 API is available */
#cmakedefine HAVE_WIN32_API

/* define if the Win32 LoadLibrary method is available */
#cmakedefine HAVE_WINDLL_RUNTIME_BINDING

/* Define to 1 if you have the <windows.h> header file. */
#cmakedefine HAVE_WINDOWS_H 1

/* define if it is possible to build against X11 */
#cmakedefine HAVE_X11_AVAILABLE

/* Define to use zlib */
#cmakedefine HAVE_ZLIB

/* whether or not _finite() is available */
#cmakedefine HAVE__FINITE

/* whether or not _fpclass() is available */
#cmakedefine HAVE__FPCLASS

/* Define to use Win32 _ftime() */
#cmakedefine HAVE__FTIME

/* Define to use Win32 _getcwd() */
#cmakedefine HAVE__GETCWD

/* whether or not _isnan() is available */
#cmakedefine HAVE__ISNAN

/* Define to use Win32 _logb() */
#cmakedefine HAVE__LOGB

/* define if _snprintf() is available */
#cmakedefine HAVE__SNPRINTF

/* define if the system has _splitpath() */
#cmakedefine HAVE__SPLITPATH

/* define if _vsnprintf() is available */
#cmakedefine HAVE__VSNPRINTF

/* Define if compiler has __builtin_expect() macro */
#cmakedefine HAVE___BUILTIN_EXPECT

/* define for runtime linking with zlib */
#cmakedefine LIBBZIP2_RUNTIME_LINKING 1

/* define for runtime linking with OpenAL */
#cmakedefine OPENAL_RUNTIME_LINKING 1

/* define this to the dynamic library name of OpenGL */
#define OPENGL_SYSTEM_LIBRARY_NAME "@OPENGL_SYSTEM_LIBRARY_NAME@"

/* Name of package */
#define PACKAGE "Coin"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "coin-support@coin3d.org"

/* Define to the full name of this package. */
#define PACKAGE_NAME "Coin"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "Coin @COIN_VERSION@"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "coin"

/* Define to the version of this package. */
#define PACKAGE_VERSION "@COIN_VERSION@"

/* define for runtime linking with simage */
#cmakedefine SIMAGE_RUNTIME_LINKING 1

/* define for choosing correct variable size */
#define SIM_TIMEVAL_TV_SEC_T @SIM_TIMEVAL_TV_SEC_T@

/* define for choosing correct variable size */
#define SIM_TIMEVAL_TV_USEC_T @SIM_TIMEVAL_TV_USEC_T@

/* define for runtime linking with SpiderMonkey */
#cmakedefine SPIDERMONKEY_RUNTIME_LINKING 1

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS 1

/* Define to make Coin use/catch exceptions at some particular places. */
#cmakedefine USE_EXCEPTIONS 1

/* define to use the POSIX threads API */
#cmakedefine USE_PTHREAD

/* define to use the Win32 threads API */
#cmakedefine USE_W32THREAD

/* Version number of package */
#define VERSION "@COIN_VERSION@"

/* Define to 1 if the X Window System is missing or not being used. */
#cmakedefine X_DISPLAY_MISSING 1

/* Define to extract entropy from /dev/urandom. */
#cmakedefine XML_DEV_URANDOM

/* define for runtime linking with zlib */
#cmakedefine ZLIB_RUNTIME_LINKING 1
